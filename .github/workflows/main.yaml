name: Terraform EC2 Deploy

on:
  push:
    branches:
      - main

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout o repositório
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Configurar as credenciais da AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Instalar o Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Step 4: Inicializar o Terraform
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      # Step 5: Rodar o Terraform Apply para criar a instância EC2
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      # Step 6: Obter o IP público da instância EC2
      - name: Get EC2 instance IP
        id: ec2_ip
        run: |
          IP=$(terraform output -raw instance_ip)
          echo "EC2 IP: $IP"
          echo "::set-output name=ec2_ip::$IP"
          
      # Step 7: Criar arquivo de chave privada para SSH
      - name: Set up SSH private key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      # Step 8: Deploy da aplicação no EC2 via SSH
      - name: Deploy Python app on EC2
        run: |
          echo "Conectando no EC2 com o IP: ${{ steps.ec2_ip.outputs.ip }}"
          # Conectar via SSH usando a chave privada
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ steps.ec2_ip.outputs.ip }} << 'EOF'
            echo "Iniciando deploy..."
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo docker --version
            cd /home/ubuntu/app
            sudo docker build -t my-python-app .
            sudo docker run -d -p 5000:5000 my-python-app
            echo "Deploy concluído"
          EOF
      # Step 9: Limpar chave privada após o deploy
      - name: Clean up private key
        run: rm -f private_key.pem