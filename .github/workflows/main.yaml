name: Terraform EC2 Deploy

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout o repositório
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Configurar o AWS CLI para acessar sua conta
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Instalar o Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Step 4: Inicializar o Terraform
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      # Step 5: Rodar o Terraform Apply para criar a instância EC2
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      # Step 6: Obter o IP público da instância EC2 diretamente após o apply
      - name: Get EC2 Public IP
        id: ec2_ip
        run: |
          terraform show -json > state.json
  
          # Verificar se o arquivo JSON foi gerado corretamente
          if [ -s state.json ]; then
            echo "Arquivo state.json gerado com sucesso"
          else
            echo "Erro: Arquivo state.json está vazio ou não foi gerado corretamente"
            exit 1
          fi

          # Processar o JSON e extrair o IP
          EC2_IP=$(cat state.json | jq -r '.values.root_module.resources[] | select(.type=="aws_instance") | .values.public_ip')
          if [ -z "$EC2_IP" ]; then
            echo "Erro: Não foi possível encontrar o IP público da instância EC2"
            exit 1
          fi
          echo "EC2_IP=${EC2_IP}"
          echo "EC2_IP=$EC2_IP" >> $GITHUB_ENV
      - name: Show state.json content
        run: cat state.json
      - name: Validate JSON
        run: |
            if ! jq empty state.json; then
            echo "Erro: O arquivo state.json não é um JSON válido"
            exit 1
            fi

      # Step 7: Deploy Python app na instância EC2
      - name: Deploy Python app on EC2
        run: |
          if [ -z "$EC2_IP" ]; then
            echo "EC2 IP não encontrado!"
            exit 1
          fi

          echo "Deploying app to EC2 at $EC2_IP"
          
          # Conectar via SSH e rodar comandos na instância
          ssh -o StrictHostKeyChecking=no -i "${{ secrets.EC2_PRIVATE_KEY }}" ubuntu@${{ env.EC2_IP }} << 'EOF'
            # Passos para o deploy (instalar Docker, rodar a aplicação)
            sudo apt-get update
            sudo apt-get install -y docker.io
            cd /home/ubuntu/app
            sudo docker build -t my-python-app .
            sudo docker run -d -p 5000:5000 my-python-app
          EOF