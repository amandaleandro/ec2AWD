name: Terraform EC2 Deploy

on:
  push:
    branches:
      - main

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout o repositório
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Configurar as credenciais da AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Instalar o Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Step 4: Inicializar o Terraform
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      # Step 5: Rodar o Terraform Apply para criar a instância EC2
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      # Step 6: Obter o IP público da instância EC2 e gravar em um arquivo temporário
      - name: Get EC2 Public IP
        id: get_ip
        run: |
          EC2_IP=$(terraform output -raw instance_ip | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+')
          echo "$EC2_IP" > ec2_ip.txt

      # Step 7: Ler o IP da instância EC2 do arquivo
      - name: Read EC2 IP
        id: read_ip
        run: |
          EC2_IP=$(cat ec2_ip.txt)
          echo "EC2_IP=$EC2_IP" >> $GITHUB_ENV

      # Step 8: Configurar SSH para conexão na EC2
      - name: Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ./ec2-key.pem
          chmod 600 ./ec2-key.pem

      # Step 9: Copiar arquivos da aplicação para a EC2
      - name: Copy files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ./ec2-key.pem -r ./src/ ubuntu@${{ env.EC2_IP }}:/home/ubuntu/app/

      # Step 10: Executar o setup na EC2 e rodar a aplicação
      - name: Run setup on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ./ec2-key.pem ubuntu@${{ env.EC2_IP }} << 'EOF'
            echo "Instalando dependências..."
            sudo apt-get update
            sudo apt-get install -y python3 python3-pip docker.io

            echo "Subindo aplicação via Docker..."
            cd /home/ubuntu/app
            sudo docker build -t myapp .
            sudo docker run -d -p 80:80 myapp

            echo "Aplicação está rodando"
          EOF
